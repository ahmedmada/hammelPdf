import io.gitlab.arturbosch.detekt.Detekt


apply plugin: 'com.android.application'

ext {
    appId = 'org.hammel.paintpdf'
    appName = '@string/pdfPaint_app_name'
}

if (project.hasProperty('independent')) {
    def today = new Date()
    appId += '.independent_' + today.format('YYYYMMdd_HHmm')
    appName = property('independent') ?: 'Paint ' + today.format('MMdd HH:mm')
}

if (!project.hasProperty("signingKeystore")) {
    ext.signingKeystore = "dummyKeystore"
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    defaultConfig {
        applicationId appId
        minSdkVersion rootProject.ext.androidMinSdkVersion
        //noinspection OldTargetApi
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.androidVersionCode
        versionName rootProject.ext.androidVersionName
        manifestPlaceholders += [appName: appName]
        setProperty("archivesBaseName", "paintpdf")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    signingConfigs {
        signedRelease {
            storeFile file(project.property("signingKeystore"))
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    if (project.hasProperty("signingKeystore") && project.hasProperty("signingKeystorePassword") &&
            project.hasProperty("signingKeyAlias") && project.hasProperty("signingKeyPassword")) {
        android.signingConfigs.signedRelease.storePassword = project.property("signingKeystorePassword")
        android.signingConfigs.signedRelease.keyAlias = project.property("signingKeyAlias")
        android.signingConfigs.signedRelease.keyPassword = project.property("signingKeyPassword")
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        signedRelease.initWith(buildTypes.release)
        signedRelease {
            signingConfig signingConfigs.signedRelease
        }
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}

tasks.withType(Detekt).configureEach {
    jvmTarget = "1.8"
    exclude("**/resources/**")
    exclude("**/build/**")
}

dependencies {
    implementation project(':Paintroid')

    implementation 'com.android.support:support-core-utils:28.0.0'
}
